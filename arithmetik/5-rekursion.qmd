---
title: "Rekursion"
jupyter: python3
---

Die Folge der natürlichen Zahlen beginnt also mit 1, und jedes nächstes Element zeichnet sich dadurch aus, dass es genau um eins größer ist als sein Vorgänger, also: $n_2 = n_1+1$.
Wir könnten die Menge der natürlichen Zahlen also auch mit folgender *rekursiven Beziehung* beschreiben:

::: {.callout-warning}
## Rekursive Definition der natürlichen Zahlen
$$
\begin{align}
\mathbb{N}_1 &= 1\\
\mathbb{N}_m &= \mathbb{N}_{m-1}+1
\end{align}
$$
:::

::: {.callout-note}
## Rekursive Beziehung
Eine **rekursive Beziehung** ist eine *selbstbezügliche* Beschreibung der Elemente einer Menge, in der also die Elemente in Bezug zu einem oder mehreren anderen Elementen der Menge definiert sind.

Diese Beziehungskette muss aber irgenwann beendet werden, damit sie sich nicht unendlich weiter fortsetzt.
Dazu wird eine *Abbruchbedingung* definiert, d.h. der Wert für ein bestimmtes Element wird so festgelegt, dass er sich ohne Rekursion bestimmen lässt.
Im Fall der natürlichen Zahlen ist das das erste Element $\mathbb{N}_1$ der Menge $\mathbb{N}$, dem der Wert 1 zugewiesen wird.
:::

Die obige rekursive Definition der natürlichen Zahlen wird in der Arithmetik allerdings selten verwendet; dennoch ist sie ein guter Einstiegspunkt, um das Konzept der *Rekursion* zu verstehen:
wir könnten eine rekursive Funktion definieren, die das $n$-te Element von $\mathbb{N}$ berechnet:

```{python}
def nat(n):
  def rek(m):                 # <1>
    if m == n: return m       # <2>
    else: return rek(m+1)     # <3>
  return rek(1)               # <4>

assert nat(15) == 15
```
1. Definition einer *inneren* Funktion `rek()`: diese Funktion ist nur innerhalb der sie umgebenden Funktion `nat()` sichtbar, kann also nicht direkt in Python aufgerufen werden.
2. *Abbruchbedingung*: wenn `m == n`, dann wird ohne weitere Berechnung `m` als Ergebnis zurückgegeben.
3. Wenn die Abbruchbedingung nicht erfüllt ist, dann ruft sich `rek()` selbst wieder mit dem Argument `m+1` auf.
Das ist der *rekursive Schritt* der inneren Funktion `rek()`.
4. Aufruf der *rekursiven Funktion* `rek()` mit dem ersten Element von $\mathbb{N}$

Diese Funktion mag auf den ersten Blick nicht als besonders nützlich erscheinen; rekursive Funktionen können sich aber zum Abzählen der Elemente einer Menge als sehr wertvoll erweisen.
